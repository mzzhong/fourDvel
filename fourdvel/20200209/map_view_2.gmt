#!/bin/bash

rv=$((RANDOM))$((RANDOM))

# Receiving parameters.

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -b|--dem)
    dem="$2"
    shift # past argument
    shift # past value
    ;;
    -e|--evan)
    evans="$2"
    shift # past argument
    shift # past value
    ;;
    --speedmap)
    speedmap="$2"
    shift # past argument
    shift # past value
    ;;
    --other_1)
    other_1="$2"
    shift # past argument
    shift # past value
    ;;
    --temporary)
    temporary="$2"
    shift # past argument
    shift # past value
    ;;
    --tocm)
    tocm="$2"
    shift # past argument
    shift # past value
    ;;
    --id)
    id="$2"
    shift # past argument
    shift # past value
    ;;
    --name)
    name="$2"
    shift # past argument
    shift # past value
    ;;
    -c|--comment)
    comment="$2"
    shift # past argument
    shift # past value
    ;;
    --minval)
    minval="$2"
    shift # past argument
    shift # past value
    ;;
    --maxval)
    maxval="$2"
    shift # past argument
    shift # past value
    ;;
    -u|--unit)
    unit="$2"
    shift # past argument
    shift # past value
    ;;
    -t|--title)
    title="$2"
    shift # past argument
    shift # past value
    ;;
    --velo)
    velofile="$2"
    shift # past argument
    shift # past value
    ;;
    --default)
    DEFAULT=YES
    shift # past argument
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

echo dem            = "${dem}"
echo evans          = "${evans}"
echo id             = "${id}"
echo name           = "${name}"
echo comment        = "${comment}"
echo minval         = "${minval}"
echo maxval         = "${maxval}"
echo unit           = "${unit}"
echo title          = "${title}"
echo DEFAULT        = "${DEFAULT}"

######## Preparation ################
#rm gmt.conf
#
##gmt gmtset PS_MEDIA B4
#gmt gmtset PS_MEDIA Evans
#gmt gmtset MAP_FRAME_TYPE plain 
#gmt gmtset MAP_GRID_PEN_PRIMARY 1p,gray,--
#
#gmt gmtset FORMAT_GEO_MAP ddd.x

#region=-R-85/-69/-77.7/-74
#proj=-JM6i
#Boption='-BWeSn -Bxa3 -Bya1'

basemap_mode=5

if [ $basemap_mode -eq 0 ];then
    ## Stereographic ##
    # Evans.
    region=-R-85/-69/-77.7/-74
    proj=-Js-77/-90/-71/1:3300000
    Boption='-BWesN -Bxa3 -Bya1'

elif [ $basemap_mode -eq 1 ];then
    # Synoptic scale.
    region=-R-90/-64/-79/-72
    proj=-Js-77/-90/-71/1:6000000
    Boption='-BWesN -Bxa3 -Bya1'

elif [ $basemap_mode -eq 2 ];then
    # FRIS
    region=-R-90/-40/-84/-72
    proj=-Js-64/-90/-71/1:20000000
    Boption='-BWesN -Bxa10 -Bya3'

## Evans ###

elif [ $basemap_mode -eq 3 ];then
    # Mecator projection.
    region=-R-85/-69/-77.7/-74
    proj=-JM5.5i
    Boption='-BWesN -Bxa2f2g2 -Bya0.4f0.4g0.4'

## Rutford ###

elif [ $basemap_mode -eq 4 ];then
    # Mecartor projection
    # Rutford
    region=-R-90/-78/-79.7/-76
    proj=-JM5i
    #Boption='-BWesN -Bxa1f1g1 -Bya0.2f0.2g0.2'
    Boption='-BWesN -Bxa2f2g2 -Bya0.4f0.4g0.4'

elif [ $basemap_mode -eq 41 ];then
    # Ste projection
    # Rutford
    region=-R-88/-78/-79.7/-76
    proj=-Js-83/-90/-71/1:1800000
    Boption='-BWesN -Bxa2f2g2 -Bya1f1g1'

elif [ $basemap_mode -eq 5 ];then
    # rutford
    # zoom in to grounding line zone
    region=-R-84/-81.5/-78.9/-78.3
    proj=-JM5i
    
    Boption='-BWesN -Bxa0.2f0.2g0.2 -Bya0.04f0.04g0.04'

elif [ $basemap_mode -eq 6 ];then
    # rutford
    # zoom in to grounding line and downstream
    region=-R-84.7/-80.4/-78.82/-78.32
    proj=-JM7i
    
    Boption='-BWesN -Bxa0.4f0.4g0.4 -Bya0.05f0.05g0.05'

elif [ $basemap_mode -eq 7 ];then
    # rutford
    # zoom in on ice shelves (Same as Brent's paper)
    region=-R-85/-80.1/-79.25/-78
    proj=-Js-82.5/-90/-71/1:750000
    Boption='-BWesN -Bxa2 -Bya0.5'

elif [ $basemap_mode -eq 8 ];then
    # rutford
    # zoom in on Msf (Same as Brent's paper)
    region=-R-85.8/-80.1/-79.25/-77.5
    proj=-Js-82.5/-90/-71/1:830000
    Boption='-BWesN -Bxa2 -Bya0.5'

fi

####################

resolution=0.04
evans_resolution=0.02

################### Basemap ##################
#suffix="_large_csktracks"
#suffix="RA"
suffix="_csk_tracks"
psfile="/home/mzzhong/insarRoutines/gmt_figs/${name}${suffix}.ps"
pdffile="/home/mzzhong/insarRoutines/gmt_figs/${name}${suffix}.pdf"
pngfile="/home/mzzhong/insarRoutines/gmt_figs/${name}${suffix}.png"

#gmt psbasemap $proj $region $Boption  -K -V -X2i -Y2i >$psfile

# NEW:
#gmt pscoast $region $proj -Bafg -Di -W0.25p -O -K > $psfile
#gmt pscoast $region $proj -BWesN -Bafg -Di -W0.25p -K -P -V -X2i -Y2i > $psfile
gmt psbasemap $region $proj $Boption -K -V -X2i -Y2i > $psfile

##################### DEM ###################

dem=1
dem_lon_reso=0.10
dem_lat_reso=0.02
if [ $dem -eq 1 ];then
    echo 'ploting dem...'

    demdata="/net/jokull/nobak/mzzhong/Ant_Data/DEM-CryoSat/FRIS_DEM.xyz"
    dem_min=-200
    dem_max=3000
    dem_unit='meter'
    dem_cptfile="${rv}_dem_colors.cpt"
    ## Plotting.
    gmt makecpt -Cgray -T$dem_min/$dem_max/1 -D -Z >$dem_cptfile


    # Convert xyz to grd file.
    dem_raw_nc="${rv}_dem_raw.grd"
    dem_fine_nc="${rv}_dem_fine.grd"

    # use XYZ file
    #gmt xyz2grd $demdata -G$dem_raw_nc $region -I0.02 -V

    # use nc file
    #ln -s "/net/kraken/bak/mzzhong/Ant_Data/data-visualization/FRIS_bedmap2_surface.nc" $dem_raw_nc
    ln -s "/net/kraken/bak/mzzhong/Ant_Data/data-visualization/WEST_bedmap2_surface.nc" $dem_raw_nc

    # Resample + Interpolation.
    gmt grdsample $dem_raw_nc -I${dem_lon_reso}/${dem_lat_reso} -nb+t0.1 -G$dem_fine_nc -V

    grad_dem_fine_nc="${rv}_grad_dem_fine.grd"
    
    # Make gradient
    gmt grdgradient $dem_fine_nc -A120 -G$grad_dem_fine_nc -Nt0.5 -V

    # grdview.
    gmt grdview -Ts $dem_fine_nc $proj $region -I$grad_dem_fine_nc -O -K -C$dem_cptfile -V >>$psfile

    rm $dem_cptfile
    rm $dem_raw_nc
    rm $dem_fine_nc
    rm $grad_dem_fine_nc
fi

################### SPEED MAP ##################################

if [ $speedmap -eq 1 ];then
    echo 'ploting speedmap...'

    option="xyz"
    if [ $option == "xyz" ];then
        ##### XYZ data #########
        #velodata="/net/jokull/nobak/mzzhong/Ant_Data/velocity_models/Evans_v1.xyz"
        #velodata="/net/jokull/nobak/mzzhong/Ant_Data/velocity_models/FRIS_v1.xyz"
        velodata="/net/kraken/bak/mzzhong/Ant_Data/velocity_models/Evans_v2.xyz"

        # Convert xyz to grd file.
        velo_raw_nc="${rv}_velo_raw.grd"
        velo_fine_nc="${rv}_velo_fine.grd"
        gmt xyz2grd $velodata -G$velo_raw_nc $region -I0.04 -V
    
        # Resample.
        #gmt grdsample $velo_raw_nc -I$resolution -nb+t0.1  -G$velo_fine_nc -V
        gmt grdsample $velo_raw_nc -I$resolution -nb+t0.1  -G$velo_fine_nc -V

    elif [ $option == "grd" ];then
        ##### GRD data ############
        velo_raw_nc_origin="/net/kraken/bak/mzzhong/Ant_Data/data-visualization/FRIS_Velo_Mag_m.nc"
        velo_raw_nc="${rv}_velo_raw.grd"
        ln -s ${velo_raw_nc_origin} ${velo_raw_nc}
        velo_fine_nc="${rv}_velo_fine.grd"
        gmt grdsample $velo_raw_nc -I$resolution -nb+t0.1  -G$velo_fine_nc -V
    else
        exit
    fi

    ######## Make colormap #################
    velo_min=0
    velo_max=1.5
    velo_unit='m/day'
    velo_cptfile="${rv}_velo_colors.cpt"
    gmt makecpt -Cwhite,blue -T$velo_min,$velo_max -D -Z >$velo_cptfile 
    #gmt makecpt -Cwhite,blue,green,yellow,red -T0,0.5,1,1.5,2 -D -Z >$velo_cptfile
    ######## End of colormap

    ########### Imaging #####################
    # grdview.
    gmt grdview -Ts $velo_fine_nc $proj $region -O -K -C$velo_cptfile -V --FORMAT_GEO_MAP=dddF >>$psfile

    # JM
    if [[ $proj == -JM* ]];then
        gmt psscale $proj $region -C$velo_cptfile -Dx0.2i/-0.5i+w4.5i/0.2i+h -Bxaf+l"$velo_unit" -O -K >>$psfile
    else
    # Js
        gmt psscale $proj $region -C$velo_cptfile -Dx0.87i/-0.5i+w4i/0.2i+h -Bxaf+l"$velo_unit" -O -K >>$psfile
    fi


    rm $velo_cptfile
    rm $velo_raw_nc
    rm $velo_fine_nc

fi

###########################################
echo $temporary
resolution_temp=0.01
if [ $temporary == 1 ];then
    echo 'ploting temporary data set...'

    option="grd"
    raw_resolution=0.005
    if [ $option == "xyz" ];then
        echo "xyz format"
        #data="/net/kraken/bak/mzzhong/Ant_Data/GroundingLines/bedmap2_shelf_latlon.xyz"
        #data="/home/mzzhong/insarRoutines/estimations/grid_set_velo_2d_speed.xyz"
        data="/home/mzzhong/insarRoutines/estimations/grid_set_velo_3d_verti.xyz"
        
        # Convert xyz to grd file.
        data_raw_nc="${rv}_data_raw.grd"
        data_fine_nc="${rv}_data_fine.grd"
        
        gmt xyz2grd $data -G$data_raw_nc $region -I$raw_resolution -V
        gmt grdsample $data_raw_nc -I$resolution_temp -nb+t0.1  -G$data_fine_nc -V


    elif [ $option == "grd" ];then
        echo "grd format"
        ##### GRD data ############
        #data_raw_nc_origin="/net/kraken/nobak/mzzhong/CSK-Rutford/track_008_0/cuDenseOffsets/20130811_20130819/gc_filtRange_20190921_v10.off.meter.grd"
        #data_raw_nc_origin="/net/kraken/nobak/mzzhong/CSK-Rutford/track_201_0/pairs/diff/diff_20131222_20131223_20131019_20131020_m_masked_wrapped.grd"
        #data_raw_nc_origin="/net/kraken/nobak/mzzhong/CSK-Rutford/track_201_0/pairs/diff/diff_20131222_20131223_20130901_20130902_m_masked_wrapped.grd"
        #data_raw_nc_origin="/net/kraken/nobak/mzzhong/CSK-Rutford/track_128_0/pairs/diff/diff_20140814_20140815_20140729_20140730_m_masked_wrapped.grd"
        #data_raw_nc_origin="/net/kraken/nobak/mzzhong/GoLive/L8_213_116_016_2013_314_2013_330_v1.1_vv_masked.grd"
        data_raw_nc_origin="/net/kraken/nobak/mzzhong/GoLive/p213_r116/L8_213_116_016_2013_314_2013_330_v1.1_vv_masked_masked.grd"

        data_raw_nc="${rv}_data_raw.grd"
        ln -s ${data_raw_nc_origin} ${data_raw_nc}
        data_fine_nc="${rv}_data_fine.grd"

        #gmt grdsample $data_raw_nc -I$resolution_temp -nb -G$data_fine_nc -V
        ln -s ${data_raw_nc} ${data_fine_nc}
    else
        exit
    fi

    ######## Make colormap #################
    data_min=-10
    data_max=10
    data_unit='m/d'
    data_cptfile="${rv}_data_colors.cpt"
    
    #gmt makecpt -Cblue,white,red -T$data_min,0,$data_max -D -Z >$data_cptfile
    #gmt makecpt -Cwhite,blue -T$data_min,$data_max -D -Z >$data_cptfile 
    gmt makecpt -Cjet -T$data_min/$data_max -Z -V >$data_cptfile
   
    #gmt makecpt -Cwhite,blue,green,yellow,red -T0,0.5,1,1.5,2 -D -Z >$data_cptfile
    
    ######## End of colormap

    ########### Imaging #####################
    # grdview.
    #gmt grdview -Ts $data_fine_nc $proj $region -O -K -C$data_cptfile -V --FORMAT_GEO_MAP=dddF >>$psfile
    gmt grdimage $data_fine_nc $proj $region -O -K -C$data_cptfile -V --FORMAT_GEO_MAP=dddF -Q >>$psfile

    # JM
    #gmt psscale $proj $region -C$data_cptfile -Dx0.5i/-1i+w5i/0.2i+h -Bxaf+l"$data_unit" -O -K >>$psfile
    # Js
    gmt psscale $proj $region -C$data_cptfile -Dx0.87i/-0.5i+w4i/0.2i+h -Bxaf+l"$data_unit" -O -K >>$psfile

    rm $data_cptfile
    rm $data_raw_nc
    rm $data_fine_nc

fi


################### Other_1 MAP ##################################

if [ $other_1 -eq 1 ];then
    echo 'ploting other_1...'

    ################### Case 1 #############################
    other_1_data="/home/mzzhong/insarRoutines/estimations/662/662_est_other_1.xyz"
    other_1_unit='m'
    other_1_cptfile="${rv}_other_1_colors.cpt"
    ## Plotting.
    gmt makecpt -Cblue,white,red -T0,0.3,0.6 -D -Z >$other_1_cptfile
    
    # Convert xyz to grd file.
    other_1_raw_nc="${rv}_other_1_raw.grd"
    other_1_fine_nc="${rv}_other_1_fine.grd"
    
    gmt xyz2grd $other_1_data -G$other_1_raw_nc $region -I0.04 -V
    
    # Resample.
    gmt grdsample $other_1_raw_nc -I$resolution -nb+t0.1  -G$other_1_fine_nc -V
    #gmt grdsample $other_1_raw_nc -I$resolution -nb  -G$other_1_fine_nc -V

    # grdview.
    gmt grdview -Ts $other_1_fine_nc $proj $region -O -K -C$other_1_cptfile -V --FORMAT_GEO_MAP=dddF >>$psfile

    # JM
    #gmt psscale $proj $region -C$other_1_cptfile -Dx0.5i/-1i+w5i/0.2i+h -Bxaf+l"$other_1_unit" -O -K >>$psfile

    # Js
    gmt psscale $proj $region -C$other_1_cptfile -Dx0.87i/-0.5i+w4i/0.2i+h -Bxaf+l"$other_1_unit" -O -K >>$psfile

    rm $other_1_cptfile
    rm $other_1_raw_nc
    rm $other_1_fine_nc

fi

#################### For actual inversion results ##############################

####    Evans ########
#lon_resolution=0.02
#lat_resolution=0.005

#####   Rutford #########
# For 500m resolution
lon_resolution=0.025
lat_resolution=0.005

# For 100m resolution
#lon_resolution=0.005
#lat_resolution=0.001

if [ $evans -eq 1 ];then

    echo 'ploting data...'

    echo $name
    if [[ $name == *horizontal_velocity ]]; then
        data="/home/mzzhong/insarRoutines/estimations/${id}/${name/velocity/speed}.xyz"
    else
        data="/home/mzzhong/insarRoutines/estimations/${id}/${name}.xyz"
    fi

    if ! [ -f $data ]; then
        echo "data file not exists"
        exit
    fi

    default_interval=0.005
    if [ "$tocm" == '1' ];then
        echo 'convert to cm'
        cat $data | gmt math STDIN -C2 100 MUL = ${rv}_tmp.txt
        data=${rv}_tmp.txt
        #default_interval=$((default_interval*100))
    fi

    
    raw_nc="${rv}_raw.grd"
    fine_nc="${rv}_fine.grd"
    
    # Convert xyz to grd file.
    gmt xyz2grd $data -G$raw_nc $region -I${lon_resolution}/${lat_resolution} -V
    
    # Resampling.
    #gmt grdsample $raw_nc -I$evans_resolution -G$fine_nc -n+c -V
    
    # No resampling
    cp $raw_nc $fine_nc    

    if [ "$title" == "nan" ]; then
        title=""
    fi

    # Prepare cpt files.
    default_cptfile="${rv}_default.cpt"
    
    gmt makecpt -Cpolar -T$minval/$maxval/${default_interval} -D -Z >$default_cptfile

    velo_cptfile="${rv}_velo.cpt"
    
    # Evans speed
    gmt makecpt -Cwhite,blue,green,yellow,red -T0,0.5,1,1.5,2 -D -Z >$velo_cptfile

    # Rutford speed
    #gmt makecpt -Cwhite,blue,green,yellow,red -T0,0.375,0.75,1.125,1.5 -D -Z >$velo_cptfile
    #gmt makecpt -Cwhite,blue,green,yellow,red -T0,0.3,0.6,0.9,1.2 -D -Z >$velo_cptfile


    tide_amp_cptfile="${rv}_tide_amp.cpt"
    gmt makecpt -Cwhite,yellow,red,purple,black -T$minval/$maxval/${default_interval} -D -Z >$tide_amp_cptfile

    tide_phase_cptfile="${rv}_tide_phase.cpt"
    gmt makecpt -Cblack,blue,white,red,black -T$minval/$maxval/0.005 -D -Z >$tide_phase_cptfile
    #gmt makecpt -Cseis -T$minval/$maxval/0.005 -D -Z >$tide_phase_cptfile

    
    # Choose a cptfile and color Boption.
    cbar_Boption=""
    if [[ $name == *horizontal_velocity ]] || [[ $name == *horizontal_speed ]]; then

        if ! [[ $name == *uq* ]]; then
            cptfile=$velo_cptfile
            cbar_Boption="-Bxa0.3"
        else
            cptfile=$default_cptfile
        fi
    
    elif [[ $name == *Msf* ]] || [[ $name == *O1* ]] || [[ $name == *M2* ]]; then

        if ! [[ $name == *uq* ]]; then

            if [[ $name == *amplitude* ]];then
                cptfile=$tide_amp_cptfile

                if [[ $name == *O1*up* ]];then
                    cbar_Boption="-Bxa0.1"
                fi

                if [[ $name == *Msf*along* ]];then
                    cbar_Boption="-Bxa10"
                fi


            elif [[ $name == *phase* ]];then
                cptfile=$tide_phase_cptfile
                
                if [[ $name == *Msf*along* ]];then
                    cbar_Boption="-Bxa1"
                fi
                
                if [[ $name == *Msf*cross* ]];then
                    cbar_Boption="-Bxa2"
                fi

                if [[ $name == *O1*up* ]];then
                    cbar_Boption="-Bxa30"
                fi

 
            fi
        else
            cptfile=$default_cptfile
        fi
    else 
        cptfile=$default_cptfile
    fi

    # Show data.
    gmt grdview -Ts $fine_nc $proj $region -O -K -C$cptfile -V >>$psfile
    #gmt grdimage $raw_nc $proj $region -BWeSn+t"$title" -Bxa1g1+l"Longitude" -Bya0.2g0.2+l"Latitude" -O -K -C$cptfile  -Q  -V --FORMAT_GEO_MAP=dddF >>$psfile

    # Plot velocity vector (From estimation only).
    size=0.1
    echo $velofile
    if [ -f $velofile ];then
        gmt psxy $velofile -Sv$size+ea -Gblack $region $proj -W0.5,black -K -O -V >> $psfile
    fi

    # ad hoc to add another result.
    #name1='231_secular_horizontal_speed'
    #data1="/home/mzzhong/insarRoutines/estimations/${name1}.xyz"
    #gmt xyz2grd ${data1} -G$raw_nc $region -I0.02 -V
    #gmt grdview -Ts $raw_nc $proj $region -K -C$cptfile -V --FORMAT_GEO_MAP=dddF -O -K >>$psfile

    
    # JM
    if [[ $proj == -JM* ]];then
        gmt psscale $proj $region -C$cptfile $cbar_Boption  -Dx0.2i/-0.5i+w4.5i/0.2i+h -Bxaf+l"$unit" -O -K >>$psfile
    else
    # Js
        gmt psscale $proj $region -C$cptfile $cbar_Boption -Dx0.87i/-0.5i+w4i/0.2i+h -Bxaf+l"$unit" -O -K >>$psfile
    fi

    if [ "$comment" == 'nan' ]; then
        gmt pstext $proj $region -O -K -V -F+f16p+jMR <<EOF >>$psfile
        -67, -74.2, $comment
EOF
    fi

    rm $raw_nc
    rm $fine_nc
    rm $default_cptfile
    rm $velo_cptfile
    rm $tide_amp_cptfile
    rm $tide_phase_cptfile
    rm ${rv}_tmp.txt
fi

###################### Make a scale ##############################
scale=0

## Evans
#if [ $scale -eq 1 ];then
#    gmt psbasemap $region $proj -Lg-82/-77.2+w50+c-77.2 -F+gwhite+p2p -K -O -V >> $psfile
#fi

# Rutford
if [ $scale -eq 1 ];then
    gmt psbasemap $region $proj -Lg-83.6/-79.15+w50+c-77.2 -F+gwhite+p2p -K -O -V >> $psfile
fi


# Show footprint of tracks
csk_tracks=0
if [ $csk_tracks -eq 1 ];then
    echo 'plot csk tracks'

    trackfolder='/net/kamb/ssd-tmp1/mzzhong/insarRoutines/track_footprints/csk/desc'

    for file in ${trackfolder}/*; do
        echo $file
        gmt psxy $file $region $proj $Boption -K -O -W0.8p,black >>$psfile

    done

    trackfolder='/net/kamb/ssd-tmp1/mzzhong/insarRoutines/track_footprints/csk/asc'

    for file in ${trackfolder}/*; do
        echo $file
        gmt psxy $file $region $proj $Boption -K -O -W0.8p,black >>$psfile

    done
fi

s1_tracks=0
if [ $s1_tracks -eq 1 ];then
    echo 'plot s1 tracks'

    trackfolder='/net/kamb/ssd-tmp1/mzzhong/insarRoutines/track_footprints/s1'

    tracks=(37 52 38 169 65)
    for t in ${tracks[@]};do
        for file in ${trackfolder}/${t}*; do
            echo $file
            gmt psxy $file $region $proj $Boption -K -O -W0.8p,black >>$psfile
        done
    done

    tracks=(50 64)
    for t in ${tracks[@]};do
        for file in ${trackfolder}/${t}*; do
            echo $file
            gmt psxy $file $region $proj $Boption -K -O -W0.8p,orange >>$psfile
        done
    done


    #tracks=(50)
    #for t in ${tracks[@]};do
    #    for file in ${trackfolder}/${t}*; do
    #        echo $file
    #        gmt psxy $file $region $proj $Boption -K -O -W0.8p,green >>$psfile
    #    done
    #done
fi


csk_tracks_rutford=0
show_track_number=0
if [ $csk_tracks_rutford -eq 1 ];then
    echo 'plot csk tracks on rutford'

    csk_folder="/net/kraken/nobak/mzzhong/CSK-Rutford"

#    for track in $csk_folder"/track_*_0";do
#        footprint_folder=$track"/footprints"
#        for file in ${footprint_folder}/0.txt; do
#            echo $file
#            head -n +5 $file >temp.txt
#            #tail -n -4 $file >temp.txt
#            gmt psxy temp.txt $region $proj $Boption -K -O -W0.8p,black >>$psfile
#        done
#    done

    current_folder=`pwd`
    cd $csk_folder
    cp ${current_folder}/gmt.conf .
    #gmt gmtset PS_MEDIA Evans
    #gmt gmtset MAP_FRAME_TYPE plain 
    #gmt gmtset MAP_GRID_PEN_PRIMARY 1p,gray,--
    #gmt gmtset FORMAT_GEO_MAP D

    #for track in ${csk_folder}"/track_*_0";do
    count=0

    for track in track_*_0;do
        count=$(($count+1))
        n=$(($count%3))

        if [ $n -ne -1 ];then

            #echo "Begin"
            #echo $track
            footprint_folder=$track"/footprints"
            #echo $footprint_folder
            #echo "End"
    
            trackname=${track##*/}
            track_number=`echo $trackname | awk -F "_" '{print $2}'`
            echo $track_number
    
            # Show the track footprint
            for file in ${footprint_folder}/track.txt; do
                echo $file
                gmt psxy $file $region $proj -K -O -W0.8p,black >>$psfile            
            done
    
            # Show the track number
            if [ $show_track_number -eq 1 ];then
    
                file=${footprint_folder}/track.txt
                position=`head -n +1 $file`
                text=$position" "$track_number
                #echo $text > "temp/${track_number}_temp.txt"
                #gmt pstext "temp/${track_number}_temp.txt" $region $proj $Boption -K -O -F+f8p,Helvetica,red >>$psfile
                gmt pstext $region $proj $Boption -K -O -F+f8p,Helvetica,red << EOF >>$psfile

$text
EOF
            fi
        fi
    done

    cd $current_folder

fi

##################### Bounding box #####################
# Evans bbox
#if [ $basemap_mode -eq 1 ];then
#gmt psxy $proj $region -W1p,red -O -K -Ap << EOF >>$psfile
#-85 -77.7
#-69 -77.7
#-69 -74
#-85 -74
#-85 -77.7
#EOF
#
#fi

## Rutford bbox
##region=-R-88/-78/-79.7/-76
##if [ $basemap_mode -eq 1 ];then
#gmt psxy $proj $region -W1p,red -O -K -Ap << EOF >>$psfile
#-88 -79.7
#-78 -79.7
#-78 -76
#-88 -76
#-88 -79.7
#EOF
#
##fi

###################### Grouding line ##############

# INSAR based grounding line
#glfile='/home/mzzhong/links/jokull-nobak-net/Ant_Data/GL/GL_Points_2.txt'
#glfile='/net/jokull/nobak/bminchew/Antarctica/GroundingLines/InSAR_GL_Antarctica.xy'
#gmt psxy $proj $region -Sp0.05 -O $glfile -V >>$psfile

# Bedmap grounding line
glfile='/home/mzzhong/links/kraken-bak-net/Ant_Data/GroundingLines/bedmap2_groundingline_latlon_100flt.xy'
gmt psxy $proj $region -W1p,black -O $glfile -V >>$psfile

######## Wrap up ##############
#ps2pdf $psfile
gmt psconvert -A10p -Tf -P -V $psfile

convert $pdffile $pngfile
#convert -rotate "90" $pngfile $pngfile

#rm gmt.history
#rm gmt.conf
